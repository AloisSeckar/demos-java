[
  {
    "jep": 472,
    "info": {
      "name": "JEP 472 - Prepare to Restrict the Use of JNI",
      "dscr": "Issues warnings on uses of the Java Native Interface (JNI) to prepare for future restrictions, enhancing platform integrity by requiring explicit opt-in."
    }
  },
  {
    "jep": 478,
    "info": {
      "name": "JEP 478 - Key Derivation Function API (Preview)",
      "dscr": "A preview of the KDF API. The final implementation is in JEP 510 for Java 25."
    }
  },
  {
    "jep": 484,
    "info": {
      "name": "JEP 484 - Class-File API",
      "dscr": "Finalizes the API for parsing, generating, and transforming Java class files."
    }
  },
  {
    "jep": 485,
    "info": {
      "name": "JEP 485 - Stream Gatherers",
      "dscr": "Enhance the Stream API to support custom intermediate operations. This will allow stream pipelines to transform data in ways that are not easily achievable with the existing built-in intermediate operations."
    }
  },
  {
    "jep": 486,
    "info": {
      "name": "JEP 486 - Permanently Disable the Security Manager",
      "dscr": "The Security Manager API, deprecated for removal in earlier releases, has now been permanently disabled. Any attempt to set a Security Manager will result in an UnsupportedOperationException."
    }
  },
  {
    "jep": 489,
    "info": {
      "name": "JEP 489 - Vector API (Ninth Incubator)",
      "dscr": "Up-to-date demo moved to `org.javademos.java25.jep508.VectorAPIDemo` (JEP 508)"
    }
  },
  {
    "jep": 490,
    "info": {
      "name": "JEP 490 - ZGC: Remove the Non-Generational Mode",
      "dscr": "Removes the non-generational mode of the Z Garbage Collector (ZGC), making the generational mode the only option. This change simplifies long-term maintenance and focuses development efforts on the more efficient generational model."
    }
  },
  {
    "jep": 491,
    "info":{
      "name": "Synchronize Virtual Threads without Pinning",
      "dscr": "Improves scalability by allowing virtual threads to unmount from their carrier platform thread when blocked in 'synchronized' methods, eliminating a major source of thread pinning."
     }
   },
  {
    "jep": 493,
    "info": {
      "name": "JEP 493 - Linking Run-Time Images without JMODs",
      "dscr": "Simplifies jlink by removing the need for JMOD files. Developers can now link custom runtime images directly from modular JARs, streamlining the build process."
    }
  },
   {
     "jep": 498,
     "info": {
      "name": "JEP 498 - Warn upon Use of Memory-Access Methods in sun.misc.Unsafe",
      "dscr": "Showing runtime warnings for methods that are already deprecated"
     }
  },
  {
    "jep": 479,
    "info": {
      "name": "JEP 479 - Remove the 32-bit x86 Windows Port",
      "dscr": "Removed support for the 32-bit x86 port on Windows in JDK 24, while keeping other OS ports available."
    }
  },
  {
    "jep": 501,
    "info": {
      "name": "JEP 501 - Deprecate the 32-bit x86 Port for Removal",
      "dscr": "Deprecated the entire 32-bit x86 port in JDK 24, warning of its complete removal in JDK 25."
    }
  }
]
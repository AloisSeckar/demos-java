[
  {
    "number": 470,
    "name": "PemEncodings",
    "description": "Add standard APIs for reading and writing PEM-encoded data."
  },
  {
    "number": 502,
    "name": "StableValues",
    "description": "Introduce stable values to the Java language to simplify thread-safe object initialization."
  },
  {
    "number": 503,
    "name": "Remove32BitX86",
    "description": "Remove support for 32-bit x86 platforms."
  },
  {
    "number": 505,
    "name": "StructuredConcurrency",
    "description": "Simplify concurrent programming by introducing structured concurrency constructs."
  },
  {
    "number": 506,
    "name": "ScopedValues",
    "description": "Introduce scoped values for lightweight and safe sharing of data across threads."
  },
  {
    "number": 507,
    "name": "PrimitiveTypes",
    "description": "Enhance Java language with primitive types enhancements."
  },
  {
    "number": 508,
    "name": "VectorAPI",
    "description": "Improve performance with vector computations using the Vector API."
  },
  {
    "number": 509,
    "name": "CpuTimeProfiling",
    "description": "Add improved CPU time profiling capabilities."
  },
  {
    "number": 510,
    "name": "KeyDerivationFunction",
    "description": "Provide standard API for key derivation functions."
  },
  {
    "number": 511,
    "name": "ModuleImportDeclarations",
    "description": "Introduce module import declarations to simplify module dependencies."
  },
  {
    "number": 512,
    "name": "CompactSourceAndInstanceMain",
    "description": "Introduce compact source files and instance main methods to simplify Java source structure."
  },
  {
    "number": 513,
    "name": "FlexibleConstructorBodies",
    "description": "Allow more flexible constructor bodies for enhanced readability and control."
  },
  {
    "number": 514,
    "name": "AheadOfTimeCLI",
    "description": "Add ahead-of-time compilation CLI tools for faster startup."
  },
  {
    "number": 515,
    "name": "AheadOfTimeMethodProfiling",
    "description": "Introduce profiling for AOT-compiled methods."
  },
  {
    "number": 518,
    "name": "JFRCooperativeSampling",
    "description": "Add cooperative sampling for Java Flight Recorder."
  },
  {
    "number": 519,
    "name": "CompactObjectHeader",
    "description": "Reduce memory footprint with compact object headers."
  },
  {
    "number": 520,
    "name": "Jep520MethodTracing",
    "description": "Introduce method tracing enhancements for performance analysis."
  }
]

[
  {
    "jep": 470,
    "jdk": 25,
    "name": "JEP 470 - PEM Encodings of Cryptographic Objects (Preview)",
    "dscr": "Preview support for reading and writing PEM-encoded cryptographic objects; see PemEncodings.java",
    "link": false,
    "code": false
  },
  {
    "jep": 502,
    "jdk": 25,
    "name": "JEP 502 - Stable Values (Preview)",
    "dscr": "Stable Values offer an immutable data abstraction for performance and safety; see StableValuesDemo.java",
    "link": false,
    "code": true
  },
  {
    "jep": 503,
    "jdk": 25,
    "name": "JEP 503 - Remove the 32-bit x86 Port",
    "dscr": "Removes the legacy 32-bit x86 port from the JDK to reduce maintenance burden; see Remove32BitX86Demo.java",
    "link": false,
    "code": false
  },
  {
    "jep": 505,
    "jdk": 25,
    "name": "JEP 505 - Structured Concurrency (Fifth Preview)",
    "dscr": "Structured concurrency simplifies concurrent programming by treating multiple tasks as a single unit of work; see StructuredConcurrencyDemo.java",
    "link": false,
    "code": true
  },
  {
    "jep": 506,
    "jdk": 25,
    "name": "JEP 506 - Scoped Values",
    "dscr": "Scoped Values provide a safe, immutable alternative to thread-local variables; see ScopedValuesDemo.java",
    "link": false,
    "code": true
  },
  {
    "jep": 507,
    "jdk": 25,
    "name": "JEP 507 - Primitive Types in Patterns, instanceof, and switch (Third Preview)",
    "dscr": "Demonstrates primitive type patterns in instanceof and switch; see PrimitiveTypesDemo.java",
    "link": false,
    "code": true
  },
  {
    "jep": 508,
    "jdk": 25,
    "name": "JEP 508 - Vector API (Tenth Incubator)",
    "dscr": "API for expressing vector computations that reliably compile at runtime to optimal vector instructions on supported CPUs to achieve better performance",
    "link": false,
    "code": true
  },
  {
    "jep": 509,
    "jdk": 25,
    "name": "JEP 509 - JFR CPU-Time Profiling",
    "dscr": "Demonstrates experimental CPU-Time Profiling using JFR; see CpuTimeProfilingDemo.java",
    "link": false,
    "code": true
  },
  {
    "jep": 510,
    "jdk": 25,
    "name": "JEP 510 - Key Derivation Function API",
    "dscr": "Standard API for Key Derivation Functions (KDFs) in Java; see KeyDerivationFunctionDemo.java for usage.",
    "link": false,
    "code": true
  },
  {
    "jep": 511,
    "jdk": 25,
    "name": "JEP 511 - Module Import Declarations",
    "dscr": "Java 25 finalizes module import declarations; see ModuleImportDeclarations.java for details",
    "link": false,
    "code": true
  },
  {
    "jep": 512,
    "jdk": 25,
    "name": "JEP 512 - Compact Source Files and Instance Main Methods",
    "dscr": "Finalizes the 'on-ramp' features for beginners. Allows instance main methods, implicitly declared classes for single-file programs, and introduces a standard IO class, making it easier to write simple Java programs.",
    "link": false,
    "code": true
  },
  {
    "jep": 513,
    "jdk": 25,
    "name": "JEP 513 - Flexible Constructor Bodies",
    "dscr": "It shows the best practises for explicit constructor invocation, see FlexibleConstructorBodiesDemo.java for details",
    "link": false,
    "code": true
  },
  {
    "jep": 514,
    "jdk": 25,
    "name": "JEP 514 - Ahead-of-Time Command-Line Ergonomics",
    "dscr": "Shows simplified and ergonomic CLI commands for Ahead-of-Time compilation; see AheadOfTimeCLI.java",
    "link": false,
    "code": true
  },
  {
    "jep": 515,
    "jdk": 25,
    "name": "JEP 515 - Ahead-of-Time Method Profiling",
    "dscr": "Demonstrates Ahead-of-Time Method Profiling which improves warmup time; see AheadOfTimeMethodProfiling.java",
    "link": false,
    "code": true
  },
  {
    "jep": 518,
    "jdk": 25,
    "name": "JEP 518 - JFR Cooperative Sampling",
    "dscr": "Introduce cooperative sampling in Java Flight Recorder to reduce bias and overhead; see JFRCooperativeSampling.java",
    "link": false,
    "code": false
  },
  {
    "jep": 519,
    "jdk": 25,
    "name": "JEP 519 - Compact Object Headers",
    "dscr": "Adds a demo for JEP 519 â€” Class-File API, showcasing how to parse, inspect, and generate Java class files programmatically; see CompactObjectHeaderDemo.java",
    "link": false,
    "code": true
  },
  {
    "jep": 520,
    "jdk": 25,
    "name": "JEP 520 - JFR Method Timing & Tracing",
    "dscr": "Introduces method timing and tracing capabilities to JFR, allowing for low-overhead method invocation tracing; see Jep520MethodTracingDemo.java",
    "link": false,
    "code": true
  },
  {
    "jep": 521,
    "jdk": 25,
    "name": "JEP 521 - Generational Shenandoah",
    "dscr": "Enhances Shenandoah GC with generational collection, improving performance and pause times by treating short-lived and long-lived objects differently; see GenerationalShenandoahDemo.java",
    "link": false,
    "code": true
  }
]